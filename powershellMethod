<#
#>

try{

    #21
    $defrag = schtasks /Change /DISABLE /TN "\Microsoft\Windows\Defrag\ScheduledDefrag"
    $defrag
    
         
}catch{
    Write-Host "Error... Command Failed."
}

try{
    
    #22
    $stopSys = Stop-Service -Force -Name "SysMain" Set-Service -Name "SysMain" -StartupType Disabled
    $stopSys
    
         
}catch{
    Write-Host "Error... Command Failed."
}   

try{
    
    #23
    $W32TM = w32tm /query /status
    $W32TM
    
         
}catch{
    Write-Host "Error... Command Failed."
}


function GET-W32TMStatus($arg){

    $W32TMStat = ConvertFrom-StringData ($arg -join "`n" -replace ':', '=')
    if($W32TMStat.Source -eq "time.windows.com,0x9"){
    
        return $true
    
    }else{
    
        return $false
    
    }

}


try{
    #24
    if(GET-W32TMStatus(w32tm /query /status)){
        
        Write-Host "W32TM Source Name Verified... Moving On... `n"
    
    }elseif(GET-W32TMStatus(w32tm /query /status -eq $false)){
    
}
    
    
}catch{

    Throw "A fatal error has occurred.[ --Source name does not match.-- ]"
}

try{

    #25
    $defrag = schtasks /Change /DISABLE /TN "\Microsoft\Windows\Defrag\ScheduledDefrag"
    $defrag
    
         
}catch{
    Write-Host "Error... Command Failed."
}

function Task-Cleanup(){

    Get-ScheduledTask -TaskName
    
    }


<#

try{
    #10
    $Username = Read-Host -Prompt "Please enter your username."
    $Password = Read-Host -Prompt "Please enter your password." | ConvertTo-SecureString -AsPlainText -Force
    $CurrentPCName = Read-Host -Prompt "Please enter your computers CURRENT name."
    $NewPCName = Read-Host -Prompt "Please enter your computers NEW name."
    $Domain = Read-Host -Prompt "Please enter your required domain."
    $Creds = New-Object System.Management.Automation.PSCredential($Username ,$Password)


    Rename-Computer -NewName $NewPCName -ComputerName $CurrentPCName -Restart -DomainCredential $Creds
    
         
}catch{
    
    Throw "A fatal error has occurred.[ --Invalid Credentials or Computer Name/Domain.-- ]"
}

try{
    #11
    Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0
    
         
}catch{

    Throw "Error... Command Failed."
}
#>
Write-host "TEST"

if((Get-ScheduledTask -TaskName -like "o")){Write-Host Get-ScheduledTask -TaskName}
