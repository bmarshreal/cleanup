import pyautogui as pag
import time
import sys
import subprocess
import pywinauto as pwa


#**************************************************Useful Commands**********************************************************#

# # |command to restart computer: Restart-Computer
# # |command to restart multiple computers: Restart-Computer -ComputerName SHELL-PC01, SHELL-PC02, localhost
# # |command to run powershell as admin: runas /netonly /user:RemoteDomain\Administrator powershell
# # |command to disable remote desktop: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 1
# # |command to disable remote desktop through firewall: Disable-NetFirewallRule -DisplayGroup "Remote Desktop"
# # |command to enable remote desktop through firewall: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
# # |command to set UAC level 0-1 (min-MAX): Set-ItemProperty -Path REGISTRY::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System -Name ConsentPromptBehaviorAdmin -Value 0
# # |
# # |
# # |
# # |
# # |
# # |
# # |
# # |
# # |
# # |

#***********************************Working  Functions ***************************************#
queryList = []

def searchFunc(arg):
    pag.press('win')
    time.sleep(1)
    pag.write(arg)
    time.sleep(0.5)

def launchFileExplorer():
    pag.hotkey("win","E")

def setTimeDate():
    time.sleep(0.5)
    pag.write('tzutil /s "Central Standard Time"')
    time.sleep(1)
    pag.press("enter")

#**********************************Functions in Testing***************************************#

def adminRights():
# + ['Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0']
    # subprocess.Popen(["powershell.exe"] + ["runas /netonly /user:RemoteDomain\Administrator powershell"])
    subprocess.call('powershell -command "Start powershell.exe -verb runas"')
    pag.press("enter")
    pag.write("admin")
    pag.press("enter")
    time.sleep(1)
    pag.press("enter")
    
    # enableRemoteDesktopSettings()



def regEdit():
    
    
    time.sleep(1)
    
    pag.write("""
        
    $acl = Get-Acl 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server'\n
    $idRef = [System.Security.Principal.NTAccount]("desktop-iostm6o\blake")\n
    $regRights = [System.Security.AccessControl.RegistryRights]::FullControl\n
    $inhFlags = [System.Security.AccessControl.InheritanceFlags]::None\n
    $prFlags = [System.Security.AccessControl.PropagationFlags]::None\n
    $acType = [System.Security.AccessControl.AccessControlType]::Allow\n
    $acl.AddAccessRule($rule)\n
    $rule = New-Object System.Security.AccessControl.FileSystemAccessRule($idRef, $regRights, $inhFlags, $prFlags, $acType)\n
    $acl.AddAccessRule($rule)\n
    $acl | Set-Acl -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server')""")



def enableRemoteDesktopSettings():
    #Enable RDP (Remote Desktop Protocol): 1 = Disable ; 0 = Enable
    pag.write('''Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0''')
    pag.press("enter")
  


adminRights()
time.sleep(2)
regEdit()
app = pwa.application(backend="uia").PowerShell
appSpec = app.window(title='Administrator: Windows PowerShell')
appSpec.maximize()





# #List of possible searches: OS, cmd, date and time settings, notifications and settings, check for updates
# #List of dicoverable terms: OS Version = qualification version, 
